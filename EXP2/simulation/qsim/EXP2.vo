// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.1.0 Build 162 10/23/2013 SJ Web Edition"

// DATE "05/02/2024 21:36:35"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fouroneMUX (
	Y,
	I,
	S);
output 	Y;
input 	[3:0] I;
input 	[1:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \I[0]~input_o ;
wire \I[1]~input_o ;
wire \I[2]~input_o ;
wire \I[3]~input_o ;
wire \S[0]~input_o ;
wire \S[1]~input_o ;
wire \inst4~0_combout ;


cyclonev_io_obuf \Y~output (
	.i(\inst4~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
defparam \Y~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \I[0]~input (
	.i(I[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I[0]~input_o ));
// synopsys translate_off
defparam \I[0]~input .bus_hold = "false";
defparam \I[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \I[1]~input (
	.i(I[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I[1]~input_o ));
// synopsys translate_off
defparam \I[1]~input .bus_hold = "false";
defparam \I[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \I[2]~input (
	.i(I[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I[2]~input_o ));
// synopsys translate_off
defparam \I[2]~input .bus_hold = "false";
defparam \I[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \I[3]~input (
	.i(I[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\I[3]~input_o ));
// synopsys translate_off
defparam \I[3]~input .bus_hold = "false";
defparam \I[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \S[0]~input (
	.i(S[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\S[0]~input_o ));
// synopsys translate_off
defparam \S[0]~input .bus_hold = "false";
defparam \S[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \S[1]~input (
	.i(S[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\S[1]~input_o ));
// synopsys translate_off
defparam \S[1]~input .bus_hold = "false";
defparam \S[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst4~0 (
// Equation(s):
// \inst4~0_combout  = ( \S[0]~input_o  & ( \S[1]~input_o  & ( \I[3]~input_o  ) ) ) # ( !\S[0]~input_o  & ( \S[1]~input_o  & ( \I[2]~input_o  ) ) ) # ( \S[0]~input_o  & ( !\S[1]~input_o  & ( \I[1]~input_o  ) ) ) # ( !\S[0]~input_o  & ( !\S[1]~input_o  & ( 
// \I[0]~input_o  ) ) )

	.dataa(!\I[0]~input_o ),
	.datab(!\I[1]~input_o ),
	.datac(!\I[2]~input_o ),
	.datad(!\I[3]~input_o ),
	.datae(!\S[0]~input_o ),
	.dataf(!\S[1]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst4~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst4~0 .extended_lut = "off";
defparam \inst4~0 .lut_mask = 64'h555533330F0F00FF;
defparam \inst4~0 .shared_arith = "off";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule
